podAnnotations:
  prometheus.io/port: "8080"
  prometheus.io/scrape: "true"
controller:
  containerName: controller
  image:
    repository: public.ecr.aws/karpenter/karpenter
    tag: "1.6.2"  # Versi√≥n especificada en los YAMLs
nodeSelector:
  kubernetes.io/os: linux
  eks: karpenter
tolerations:
  - key: KarpenterVNG
    value: karpenter
    effect: NoSchedule
  - key: KarpenterVNG
    value: karpenter
    effect: NoExecute
affinity:
  nodeAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
      nodeSelectorTerms:
        - matchExpressions:
            - key: kubernetes.io/os
              operator: In
              values:
                - linux
  podAntiAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
      - topologyKey: "kubernetes.io/hostname"
        labelSelector:
          matchLabels:
            app.kubernetes.io/name: karpenter
topologySpreadConstraints:
  - maxSkew: 1
    topologyKey: topology.kubernetes.io/zone
    whenUnsatisfiable: ScheduleAnyway
    labelSelector:
      matchLabels:
        app.kubernetes.io/name: karpenter
serviceAccount:
  annotations:
    eks.amazonaws.com/role-arn: "arn:aws:iam::851725646489:role/KarpenterNodeRole-poc-kafka2" 
settings:
  clusterName: poc-kafka2
  interruptionQueue: poc-kafka2
  defaultInstanceProfile: KarpenterNodeInstnceProfile-poc-kafka2